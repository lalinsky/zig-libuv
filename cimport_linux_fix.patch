diff --git a/src/cimport_linux.zig b/src/cimport_linux.zig
index 1fe73048..9f3b3791 100644
--- a/src/cimport_linux.zig
+++ b/src/cimport_linux.zig
@@ -1130,7 +1130,7 @@ pub const struct_uv_handle_s = extern struct {
     data: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
     loop: [*c]uv_loop_t = @import("std").mem.zeroes([*c]uv_loop_t),
     type: uv_handle_type = @import("std").mem.zeroes(uv_handle_type),
-    close_cb: uv_close_cb = @import("std").mem.zeroes(uv_close_cb),
+    close_cb: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
     handle_queue: struct_uv__queue = @import("std").mem.zeroes(struct_uv__queue),
     u: union_unnamed_26 = @import("std").mem.zeroes(union_unnamed_26),
     next_closing: [*c]uv_handle_t = @import("std").mem.zeroes([*c]uv_handle_t),
@@ -1147,7 +1147,7 @@ pub const struct_uv_async_s = extern struct {
     data: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
     loop: [*c]uv_loop_t = @import("std").mem.zeroes([*c]uv_loop_t),
     type: uv_handle_type = @import("std").mem.zeroes(uv_handle_type),
-    close_cb: uv_close_cb = @import("std").mem.zeroes(uv_close_cb),
+    close_cb: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
     handle_queue: struct_uv__queue = @import("std").mem.zeroes(struct_uv__queue),
     u: union_unnamed_27 = @import("std").mem.zeroes(union_unnamed_27),
     next_closing: [*c]uv_handle_t = @import("std").mem.zeroes([*c]uv_handle_t),
@@ -1177,7 +1177,7 @@ pub const struct_uv_signal_s = extern struct {
     data: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
     loop: [*c]uv_loop_t = @import("std").mem.zeroes([*c]uv_loop_t),
     type: uv_handle_type = @import("std").mem.zeroes(uv_handle_type),
-    close_cb: uv_close_cb = @import("std").mem.zeroes(uv_close_cb),
+    close_cb: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
     handle_queue: struct_uv__queue = @import("std").mem.zeroes(struct_uv__queue),
     u: union_unnamed_29 = @import("std").mem.zeroes(union_unnamed_29),
     next_closing: [*c]uv_handle_t = @import("std").mem.zeroes([*c]uv_handle_t),
@@ -1424,7 +1424,7 @@ pub const struct_uv_stream_s = extern struct {
     flags: c_uint = @import("std").mem.zeroes(c_uint),
     write_queue_size: usize = @import("std").mem.zeroes(usize),
     alloc_cb: uv_alloc_cb = @import("std").mem.zeroes(uv_alloc_cb),
-    read_cb: uv_read_cb = @import("std").mem.zeroes(uv_read_cb),
+    read_cb: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
     connect_req: [*c]uv_connect_t = @import("std").mem.zeroes([*c]uv_connect_t),
     shutdown_req: [*c]uv_shutdown_t = @import("std").mem.zeroes([*c]uv_shutdown_t),
     io_watcher: uv__io_t = @import("std").mem.zeroes(uv__io_t),
